{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\baner\\\\code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\baner\\\\code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"C:\\\\Users\\\\baner\\\\code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\baner\\\\code\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport uuid from \"uuid/v4\";\nvar itemsFromBackend = [{\n  id: uuid(),\n  content: \"Task 1\"\n}, {\n  id: uuid(),\n  content: \"Task 2\"\n}, {\n  id: uuid(),\n  content: \"Task 3\"\n}, {\n  id: uuid(),\n  content: \"Task 4\"\n}, {\n  id: uuid(),\n  content: \"Task 5\"\n}];\nvar columnsFromBackend = {\n  [uuid()]: {\n    name: \"Tasks in Queue\",\n    items: itemsFromBackend\n  },\n  [uuid()]: {\n    name: \"To do\",\n    items: []\n  },\n  [uuid()]: {\n    name: \"Doing\",\n    items: []\n  },\n  [uuid()]: {\n    name: \"Done\",\n    items: []\n  }\n};\n\nvar _onDragEnd = function onDragEnd(result, columns, setColumns) {\n  if (!result.destination) return;\n  var source = result.source,\n      destination = result.destination;\n\n  if (source.droppableId !== destination.droppableId) {\n    var sourceColumn = columns[source.droppableId];\n    var destColumn = columns[destination.droppableId];\n\n    var sourceItems = _toConsumableArray(sourceColumn.items);\n\n    var destItems = _toConsumableArray(destColumn.items);\n\n    var _sourceItems$splice = sourceItems.splice(source.index, 1),\n        _sourceItems$splice2 = _slicedToArray(_sourceItems$splice, 1),\n        removed = _sourceItems$splice2[0];\n\n    destItems.splice(destination.index, 0, removed);\n    setColumns(_objectSpread(_objectSpread({}, columns), {}, {\n      [source.droppableId]: _objectSpread(_objectSpread({}, sourceColumn), {}, {\n        items: sourceItems\n      }),\n      [destination.droppableId]: _objectSpread(_objectSpread({}, destColumn), {}, {\n        items: destItems\n      })\n    }));\n  } else {\n    var column = columns[source.droppableId];\n\n    var copiedItems = _toConsumableArray(column.items);\n\n    var _copiedItems$splice = copiedItems.splice(source.index, 1),\n        _copiedItems$splice2 = _slicedToArray(_copiedItems$splice, 1),\n        _removed = _copiedItems$splice2[0];\n\n    copiedItems.splice(destination.index, 0, _removed);\n    setColumns(_objectSpread(_objectSpread({}, columns), {}, {\n      [source.droppableId]: _objectSpread(_objectSpread({}, column), {}, {\n        items: copiedItems\n      })\n    }));\n  }\n};\n\nfunction App() {\n  var _this = this;\n\n  var _useState = useState(columnsFromBackend),\n      _useState2 = _slicedToArray(_useState, 2),\n      columns = _useState2[0],\n      setColumns = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: function onDragEnd(result) {\n      return _onDragEnd(result, columns, setColumns);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, Object.entries(columns).map(function (_ref, index) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        columnId = _ref2[0],\n        column = _ref2[1];\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      key: columnId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, column.name), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: 8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: columnId,\n      key: columnId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, function (provided, snapshot) {\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n        ref: provided.innerRef,\n        style: {\n          background: snapshot.isDraggingOver ? \"lightgreen\" : \"lightgrey\",\n          padding: 4,\n          width: 250,\n          minHeight: 500\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 23\n        }\n      }), column.items.map(function (item, index) {\n        return /*#__PURE__*/React.createElement(Draggable, {\n          key: item.id,\n          draggableId: item.id,\n          index: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }\n        }, function (provided, snapshot) {\n          return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n            ref: provided.innerRef\n          }, provided.draggableProps, provided.dragHandleProps, {\n            style: _objectSpread({\n              userSelect: \"none\",\n              padding: 16,\n              margin: \"0 0 8px 0\",\n              minHeight: \"50px\",\n              backgroundColor: snapshot.isDragging ? \"#006400\" : \"#456C86\",\n              color: \"white\"\n            }, provided.draggableProps.style),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 35\n            }\n          }), item.content);\n        });\n      }), provided.placeholder);\n    })));\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/baner/code/src/App.js"],"names":["React","useState","DragDropContext","Draggable","Droppable","uuid","itemsFromBackend","id","content","columnsFromBackend","name","items","onDragEnd","result","columns","setColumns","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","splice","index","removed","column","copiedItems","App","display","justifyContent","height","Object","entries","map","columnId","flexDirection","alignItems","margin","provided","snapshot","droppableProps","innerRef","background","isDraggingOver","padding","width","minHeight","item","draggableProps","dragHandleProps","userSelect","backgroundColor","isDragging","color","style","placeholder"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,IAAMC,gBAAgB,GAAG,CACvB;AAAEC,EAAAA,EAAE,EAAEF,IAAI,EAAV;AAAcG,EAAAA,OAAO,EAAE;AAAvB,CADuB,EAEvB;AAAED,EAAAA,EAAE,EAAEF,IAAI,EAAV;AAAcG,EAAAA,OAAO,EAAE;AAAvB,CAFuB,EAGvB;AAAED,EAAAA,EAAE,EAAEF,IAAI,EAAV;AAAcG,EAAAA,OAAO,EAAE;AAAvB,CAHuB,EAIvB;AAAED,EAAAA,EAAE,EAAEF,IAAI,EAAV;AAAcG,EAAAA,OAAO,EAAE;AAAvB,CAJuB,EAKvB;AAAED,EAAAA,EAAE,EAAEF,IAAI,EAAV;AAAcG,EAAAA,OAAO,EAAE;AAAvB,CALuB,CAAzB;AAQA,IAAMC,kBAAkB,GAAG;AACzB,GAACJ,IAAI,EAAL,GAAU;AACRK,IAAAA,IAAI,EAAE,gBADE;AAERC,IAAAA,KAAK,EAAEL;AAFC,GADe;AAKzB,GAACD,IAAI,EAAL,GAAU;AACRK,IAAAA,IAAI,EAAE,OADE;AAERC,IAAAA,KAAK,EAAE;AAFC,GALe;AASzB,GAACN,IAAI,EAAL,GAAU;AACRK,IAAAA,IAAI,EAAE,OADE;AAERC,IAAAA,KAAK,EAAE;AAFC,GATe;AAazB,GAACN,IAAI,EAAL,GAAU;AACRK,IAAAA,IAAI,EAAE,MADE;AAERC,IAAAA,KAAK,EAAE;AAFC;AAbe,CAA3B;;AAmBA,IAAMC,UAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAASC,OAAT,EAAkBC,UAAlB,EAAiC;AACjD,MAAI,CAACF,MAAM,CAACG,WAAZ,EAAyB;AADwB,MAEzCC,MAFyC,GAEjBJ,MAFiB,CAEzCI,MAFyC;AAAA,MAEjCD,WAFiC,GAEjBH,MAFiB,CAEjCG,WAFiC;;AAIjD,MAAIC,MAAM,CAACC,WAAP,KAAuBF,WAAW,CAACE,WAAvC,EAAoD;AAClD,QAAMC,YAAY,GAAGL,OAAO,CAACG,MAAM,CAACC,WAAR,CAA5B;AACA,QAAME,UAAU,GAAGN,OAAO,CAACE,WAAW,CAACE,WAAb,CAA1B;;AACA,QAAMG,WAAW,sBAAOF,YAAY,CAACR,KAApB,CAAjB;;AACA,QAAMW,SAAS,sBAAOF,UAAU,CAACT,KAAlB,CAAf;;AAJkD,8BAKhCU,WAAW,CAACE,MAAZ,CAAmBN,MAAM,CAACO,KAA1B,EAAiC,CAAjC,CALgC;AAAA;AAAA,QAK3CC,OAL2C;;AAMlDH,IAAAA,SAAS,CAACC,MAAV,CAAiBP,WAAW,CAACQ,KAA7B,EAAoC,CAApC,EAAuCC,OAAvC;AACAV,IAAAA,UAAU,iCACLD,OADK;AAER,OAACG,MAAM,CAACC,WAAR,mCACKC,YADL;AAEER,QAAAA,KAAK,EAAEU;AAFT,QAFQ;AAMR,OAACL,WAAW,CAACE,WAAb,mCACKE,UADL;AAEET,QAAAA,KAAK,EAAEW;AAFT;AANQ,OAAV;AAWD,GAlBD,MAkBO;AACL,QAAMI,MAAM,GAAGZ,OAAO,CAACG,MAAM,CAACC,WAAR,CAAtB;;AACA,QAAMS,WAAW,sBAAOD,MAAM,CAACf,KAAd,CAAjB;;AAFK,8BAGagB,WAAW,CAACJ,MAAZ,CAAmBN,MAAM,CAACO,KAA1B,EAAiC,CAAjC,CAHb;AAAA;AAAA,QAGEC,QAHF;;AAILE,IAAAA,WAAW,CAACJ,MAAZ,CAAmBP,WAAW,CAACQ,KAA/B,EAAsC,CAAtC,EAAyCC,QAAzC;AACAV,IAAAA,UAAU,iCACLD,OADK;AAER,OAACG,MAAM,CAACC,WAAR,mCACKQ,MADL;AAEEf,QAAAA,KAAK,EAAEgB;AAFT;AAFQ,OAAV;AAOD;AACF,CAnCD;;AAqCA,SAASC,GAAT,GAAe;AAAA;;AAAA,kBACiB3B,QAAQ,CAACQ,kBAAD,CADzB;AAAA;AAAA,MACNK,OADM;AAAA,MACGC,UADH;;AAEb,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEc,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,cAAc,EAAE,QAAnC;AAA6CC,MAAAA,MAAM,EAAE;AAArD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AACE,IAAA,SAAS,EAAE,mBAAAlB,MAAM;AAAA,aAAID,UAAS,CAACC,MAAD,EAASC,OAAT,EAAkBC,UAAlB,CAAb;AAAA,KADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGiB,MAAM,CAACC,OAAP,CAAenB,OAAf,EAAwBoB,GAAxB,CAA4B,gBAAqBV,KAArB,EAA+B;AAAA;AAAA,QAA7BW,QAA6B;AAAA,QAAnBT,MAAmB;;AAC1D,wBACE;AACE,MAAA,KAAK,EAAE;AACLG,QAAAA,OAAO,EAAE,MADJ;AAELO,QAAAA,aAAa,EAAE,QAFV;AAGLC,QAAAA,UAAU,EAAE;AAHP,OADT;AAME,MAAA,GAAG,EAAEF,QANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKT,MAAM,CAAChB,IAAZ,CARF,eASE;AAAK,MAAA,KAAK,EAAE;AAAE4B,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAEH,QAAxB;AAAkC,MAAA,GAAG,EAAEA,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,UAACI,QAAD,EAAWC,QAAX,EAAwB;AACvB,0BACE,6CACMD,QAAQ,CAACE,cADf;AAEE,QAAA,GAAG,EAAEF,QAAQ,CAACG,QAFhB;AAGE,QAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAEH,QAAQ,CAACI,cAAT,GACR,YADQ,GAER,WAHC;AAILC,UAAAA,OAAO,EAAE,CAJJ;AAKLC,UAAAA,KAAK,EAAE,GALF;AAMLC,UAAAA,SAAS,EAAE;AANN,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAYGrB,MAAM,CAACf,KAAP,CAAauB,GAAb,CAAiB,UAACc,IAAD,EAAOxB,KAAP,EAAiB;AACjC,4BACE,oBAAC,SAAD;AACE,UAAA,GAAG,EAAEwB,IAAI,CAACzC,EADZ;AAEE,UAAA,WAAW,EAAEyC,IAAI,CAACzC,EAFpB;AAGE,UAAA,KAAK,EAAEiB,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKG,UAACe,QAAD,EAAWC,QAAX,EAAwB;AACvB,8BACE;AACE,YAAA,GAAG,EAAED,QAAQ,CAACG;AADhB,aAEMH,QAAQ,CAACU,cAFf,EAGMV,QAAQ,CAACW,eAHf;AAIE,YAAA,KAAK;AACHC,cAAAA,UAAU,EAAE,MADT;AAEHN,cAAAA,OAAO,EAAE,EAFN;AAGHP,cAAAA,MAAM,EAAE,WAHL;AAIHS,cAAAA,SAAS,EAAE,MAJR;AAKHK,cAAAA,eAAe,EAAEZ,QAAQ,CAACa,UAAT,GACb,SADa,GAEb,SAPD;AAQHC,cAAAA,KAAK,EAAE;AARJ,eASAf,QAAQ,CAACU,cAAT,CAAwBM,KATxB,CAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAgBGP,IAAI,CAACxC,OAhBR,CADF;AAoBD,SA1BH,CADF;AA8BD,OA/BA,CAZH,EA4CG+B,QAAQ,CAACiB,WA5CZ,CADF;AAgDD,KAlDH,CADF,CATF,CADF;AAkED,GAnEA,CAHH,CADF,CADF;AA4ED;;AAED,eAAe5B,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport uuid from \"uuid/v4\";\n\nconst itemsFromBackend = [\n  { id: uuid(), content: \"Task 1\" },\n  { id: uuid(), content: \"Task 2\" },\n  { id: uuid(), content: \"Task 3\" },\n  { id: uuid(), content: \"Task 4\" },\n  { id: uuid(), content: \"Task 5\" }\n];\n\nconst columnsFromBackend = {\n  [uuid()]: {\n    name: \"Tasks in Queue\",\n    items: itemsFromBackend\n  },\n  [uuid()]: {\n    name: \"To do\",\n    items: []\n  },\n  [uuid()]: {\n    name: \"Doing\",\n    items: []\n  },\n  [uuid()]: {\n    name: \"Done\",\n    items: []\n  }\n};\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const { source, destination } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: {\n        ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\n\nfunction App() {\n  const [columns, setColumns] = useState(columnsFromBackend);\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\", height: \"100%\" }}>\n      <DragDropContext\n        onDragEnd={result => onDragEnd(result, columns, setColumns)}\n      >\n        {Object.entries(columns).map(([columnId, column], index) => {\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\"\n              }}\n              key={columnId}\n            >\n              <h2>{column.name}</h2>\n              <div style={{ margin: 8 }}>\n                <Droppable droppableId={columnId} key={columnId}>\n                  {(provided, snapshot) => {\n                    return (\n                      <div\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                        style={{\n                          background: snapshot.isDraggingOver\n                            ? \"lightgreen\"\n                            : \"lightgrey\",\n                          padding: 4,\n                          width: 250,\n                          minHeight: 500\n                        }}\n                      >\n                        {column.items.map((item, index) => {\n                          return (\n                            <Draggable\n                              key={item.id}\n                              draggableId={item.id}\n                              index={index}\n                            >\n                              {(provided, snapshot) => {\n                                return (\n                                  <div\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={{\n                                      userSelect: \"none\",\n                                      padding: 16,\n                                      margin: \"0 0 8px 0\",\n                                      minHeight: \"50px\",\n                                      backgroundColor: snapshot.isDragging\n                                        ? \"#006400\"\n                                        : \"#456C86\",\n                                      color: \"white\",\n                                      ...provided.draggableProps.style\n                                    }}\n                                  >\n                                    {item.content}\n                                  </div>\n                                );\n                              }}\n                            </Draggable>\n                          );\n                        })}\n                        {provided.placeholder}\n                      </div>\n                    );\n                  }}\n                </Droppable>\n              </div>\n            </div>\n          );\n        })}\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}